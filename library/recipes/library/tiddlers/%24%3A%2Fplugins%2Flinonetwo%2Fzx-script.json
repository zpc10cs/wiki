{"title":"$:/plugins/linonetwo/zx-script","name":"ZX Script Executor","description":"ZX is a tool for writing better scripts, this plugin allows you to execute a tiddler with zx.","author":"LinOnetwo","core-version":">=5.1.22","plugin-type":"plugin","version":"0.0.1","dependents":"$:/plugins/linonetwo/itonnote","list":"readme developer","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/linonetwo/zx-script/OutputBar\":{\"title\":\"$:/plugins/linonetwo/zx-script/OutputBar\",\"creator\":\"LinOnetwo\",\"tags\":\"$:/tags/ViewTemplate\",\"type\":\"text/vnd.tiddlywiki\",\"list-before\":\"$:/plugins/linonetwo/inverse-link-and-folder/infobar\",\"text\":\"<$vars currentTiddler={{{[{!!title}addprefix[$:/state/linonetwo/zx-script/output/]is[missing]then[]]~[{!!title}addprefix[$:/state/linonetwo/zx-script/output/]] }}}>\\n\\n{{||$:/core/ui/ViewTemplate/body}}\\n\\n</$vars>\"},\"$:/plugins/linonetwo/zx-script/ViewToolbarButton\":{\"title\":\"$:/plugins/linonetwo/zx-script/ViewToolbarButton\",\"tags\":\"$:/tags/ViewToolbar\",\"type\":\"text/vnd.tiddlywiki\",\"list-before\":\"$:/core/ui/Buttons/close\",\"caption\":\"{{$:/plugins/linonetwo/zx-script/zx-icon}} {{$:/plugins/linonetwo/zx-script/zx-button-caption}}\",\"short-caption\":\"zx script executor\",\"description\":\"Run tiddler as ZX Script\",\"text\":\"\\\\whitespace trim\\r\\n<$execute-zx-script content={{!!text}} title={{!!title}} type={{!!type}} />\\r\\n\"},\"$:/plugins/linonetwo/zx-script/button.js\":{\"title\":\"$:/plugins/linonetwo/zx-script/button.js\",\"text\":\"(function () {\\r\\n  const Widget = require('$:/core/modules/widgets/widget.js').widget;\\r\\n\\r\\n  class ZXExecuteButtonWidget extends Widget {\\r\\n    /**\\r\\n     * Lifecycle method: call this.initialise and super\\r\\n     */\\r\\n    constructor(parseTreeNode, options) {\\r\\n      super(parseTreeNode, options);\\r\\n      this.initialise(parseTreeNode, options);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Lifecycle method: Render this widget into the DOM\\r\\n     */\\r\\n    render(parent, nextSibling) {\\r\\n      this.parentDomNode = parent;\\r\\n      this.computeAttributes();\\r\\n      const importButton = this.document.createElement('button');\\r\\n      importButton.classList.add('tc-btn-invisible');\\r\\n      importButton.innerHTML = `${$tw.wiki.getTiddlerText(\\r\\n        '$:/plugins/linonetwo/zx-script/zx-icon',\\r\\n      )}<span class=\\\"tc-btn-text tc-button-zx-script-caption\\\">${$tw.wiki.getTiddlerText('$:/plugins/linonetwo/zx-script/zx-button-caption')}</span>`;\\r\\n      importButton.onclick = this.onExecuteButtonClick.bind(this);\\r\\n      importButton.title = importButton.ariaLabel = 'ZX';\\r\\n      parent.insertBefore(importButton, nextSibling);\\r\\n      this.domNodes.push(importButton);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Event listener of button\\r\\n     */\\r\\n    async onExecuteButtonClick() {\\r\\n      const title = this.getAttribute('title');\\r\\n      if (!title) return;\\r\\n      const type = this.getAttribute('type') || 'text/vnd.tiddlywiki';\\r\\n      const stateTiddlerTitle = `$:/state/linonetwo/zx-script/output/${title}`;\\r\\n      let fileName = title;\\r\\n      let fileContent = this.getAttribute('content', '');\\r\\n      // add mjs or md to the end\\r\\n      if (!fileName.endsWith('.mjs') && !fileName.endsWith('.js') && !fileName.endsWith('.md')) {\\r\\n        switch (type) {\\r\\n          // try fit everything that may have ```js block into md\\r\\n          case 'text/vnd.tiddlywiki':\\r\\n          case 'text/plain':\\r\\n          case 'text/markdown':\\r\\n          case 'text/x-markdown':\\r\\n          case 'text/html': {\\r\\n            fileName += '.md';\\r\\n            break;\\r\\n          }\\r\\n          case 'application/javascript':\\r\\n          default: {\\r\\n            fileName += '.mjs';\\r\\n            break;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n\\r\\n      $tw.wiki.setText(stateTiddlerTitle, 'text', undefined, '');\\r\\n      window.observables.native\\r\\n        .executeZxScript$({\\r\\n          fileContent,\\r\\n          fileName,\\r\\n        })\\r\\n        .subscribe((output) => {\\r\\n          const prevText = $tw.wiki.getTiddlerText(stateTiddlerTitle);\\r\\n          $tw.wiki.setText(stateTiddlerTitle, 'text', undefined, `${prevText ?? ''}\\\\n${output ?? ''}`);\\r\\n        });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  exports['execute-zx-script'] = ZXExecuteButtonWidget;\\r\\n})();\\r\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"},\"$:/plugins/linonetwo/zx-script/codeblock.js\":{\"title\":\"$:/plugins/linonetwo/zx-script/codeblock.js\",\"text\":\"const BaseCodeBlockWidget = require('$:/core/modules/widgets/codeblock.js').codeblock;\\r\\n\\r\\n// Hijack core codeblock widget render()\\r\\nBaseCodeBlockWidget.prototype.render = function (parent, nextSibling) {\\r\\n  this.parentDomNode = parent;\\r\\n  this.computeAttributes();\\r\\n  this.execute();\\r\\n  const codeElement = this.document.createElement('code');\\r\\n  const preElement = this.document.createElement('pre');\\r\\n  codeElement.appendChild(this.document.createTextNode(this.getAttribute('code')));\\r\\n  preElement.appendChild(codeElement);\\r\\n\\r\\n  const language = this.getAttribute('language');\\r\\n  const outputElement = this.document.createElement('pre');\\r\\n  outputElement.style.display = 'none';\\r\\n  if (['md', 'js', 'javascript', 'ts', 'typescript', 'bash', 'shell', 'sh', 'zsh'].includes(language)) {\\r\\n    const executeButtonElement = this.document.createElement('button');\\r\\n    executeButtonElement.innerText = 'ZX';\\r\\n    executeButtonElement.className = 'code-block-zx-script-execution-button';\\r\\n    executeButtonElement.addEventListener('click', () => {\\r\\n      let fileName = 'tmp';\\r\\n      let fileContent = this.getAttribute('code');\\r\\n      switch (language) {\\r\\n        case 'md': {\\r\\n          fileName += '.md';\\r\\n          break;\\r\\n        }\\r\\n        case 'js':\\r\\n        case 'javascript': {\\r\\n          fileName += '.mjs';\\r\\n          break;\\r\\n        }\\r\\n        case 'ts':\\r\\n        case 'typescript': {\\r\\n          fileName += '.ts';\\r\\n          break;\\r\\n        }\\r\\n        case 'bash':\\r\\n        case 'zsh':\\r\\n        case 'shell':\\r\\n        case 'sh': {\\r\\n          fileName += '.mjs';\\r\\n          fileContent = fileContent\\r\\n            .split('\\\\n')\\r\\n            .map((line) => `await \\\\$\\\\`${line.trim()}\\\\`;`)\\r\\n            .join('\\\\n');\\r\\n          break;\\r\\n        }\\r\\n        default: {\\r\\n          outputElement.innerText = `ZX don't execute ${language}`;\\r\\n          return;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      outputElement.innerText = '';\\r\\n      outputElement.style.display = 'flex';\\r\\n      window.observables.native\\r\\n        .executeZxScript$({\\r\\n          fileContent,\\r\\n          fileName,\\r\\n        })\\r\\n        .subscribe((output) => {\\r\\n          const prevText = outputElement.innerText;\\r\\n          outputElement.innerText = `${prevText}${prevText ? '\\\\n' : ''}${output ?? ''}`;\\r\\n        });\\r\\n    });\\r\\n\\r\\n    parent.insertBefore(executeButtonElement, nextSibling);\\r\\n  }\\r\\n\\r\\n  parent.insertBefore(preElement, nextSibling);\\r\\n  parent.insertBefore(outputElement, nextSibling);\\r\\n  this.domNodes.push(preElement);\\r\\n  if (this.postRender) {\\r\\n    this.postRender();\\r\\n  }\\r\\n};\\r\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"},\"$:/plugins/linonetwo/zx-script/developer\":{\"title\":\"$:/plugins/linonetwo/zx-script/developer\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"!! Developer guide\\n\\n!!! Icon\\n\\nIf you want to change the icon/text of the button, you need to change both [[ViewToolbarButton.tid|$:/plugins/linonetwo/zx-script/ViewToolbarButton]]'s caption field, and [[button.js|$:/plugins/linonetwo/zx-script/button.js]]'s `importButton.innerHTML = xxxx`.\\n\\nBecause we are using javascript to write the widget, it can't benefit from the caption field of tiddler that add tag [[$:/tags/ViewToolbar]].\\n\\nAnd so the caption add by javascript is shown not properly in view-toolbar, it will display both the icon and the text. So we need to use `.tc-tiddler-controls > button > .tc-button-zx-script-caption` to hide the text when it is in the view-toolbar.\\n\\n!!! List before\\n\\nWe use\\n\\n```tid\\r\\nlist-before: $:/plugins/linonetwo/inverse-link-and-folder/infobar\\r\\n```\\n\\nto make sure zx output is placed above the backlinks plugin.\\n\\n!!! Output\\n\\nWe place output of zx to a temporary tiddler, whose name start with \\\"$:/state/linonetwo/zx-script/output/\\\"\\n\\nAnd we get the name of this tiddler in wikitext using `[{!!title}addprefix[$:/state/linonetwo/zx-script/output/]`, so it can be transcluded with `{{{ }}}`\\r\\n\"},\"$:/plugins/linonetwo/zx-script/readme\":{\"title\":\"$:/plugins/linonetwo/zx-script/readme\",\"created\":\"20210915220048497\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"!! Background\\n\\n[[google/zx|https://github.com/google/zx]] is a tool for writing better scripts, with Javascript.\\n\\nThis tiddlywiki plugin enables you to run any tiddler with zx.\\n\\n!! Usage\\n\\n!!! Tiddler Type\\n\\nTiddler with title extension `*.js *.md *.mjs` can be execute without problem. Other tiddler witout extension (no `.xxx`) will be executed as `*.md` file, for example, tid file without extions will be executed as `*.md`, but it works without problem too, even you are writing wiki text instead of markdown.\\n\\nIf you add filetype `application/javascript` to your tiddler, it will be recognized as `*.mjs`.\\n\\n!!! Prerequisit\\n\\nThis plugin requires [TiddlyGit](https://github.com/tiddly-gittly/TiddlyGit-Desktop) environment to function properly. It will send tiddler content to the `zx` inside TiddlyGit, and prints the output.\\n\\n!!! Button\\n\\nA ViewToolbar button is added. You can click on it to execute the script inside your tiddler.\\n\\nAnd the zx output will be printed below your tiddler content.\\n\\n!! Developer Documentation\\n\\nSee [[$:/plugins/linonetwo/zx-script/developer]]\\r\\n\"},\"$:/plugins/linonetwo/zx-script/style.css\":{\"title\":\"$:/plugins/linonetwo/zx-script/style.css\",\"text\":\".tc-tiddler-controls button .tc-button-zx-script-caption {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.code-block-zx-script-execution-button {\\r\\n  position: absolute;\\r\\n  right: 0;\\r\\n  /* default not hovered state */\\r\\n  opacity: 0.3;\\r\\n}\\r\\n.code-block-zx-script-execution-button:hover {\\r\\n  opacity: 0.8;\\r\\n}\\r\\n.code-block-zx-script-execution-button:active {\\r\\n  opacity: 1;\\r\\n}\\r\\n\",\"creator\":\"LinOnetwo\",\"tags\":\"$:/tags/Stylesheet\",\"type\":\"text/css\"},\"$:/plugins/linonetwo/zx-script/zx-button-caption\":{\"title\":\"$:/plugins/linonetwo/zx-script/zx-button-caption\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"ZX Script\"},\"$:/plugins/linonetwo/zx-script/zx-icon\":{\"title\":\"$:/plugins/linonetwo/zx-script/zx-icon\",\"tags\":\"$:/tags/Image\",\"text\":\"<svg width=\\\"22pt\\\" height=\\\"22pt\\\" class=\\\"tc-image-zx-script tc-image-button\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" version=\\\"1.1\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 100 90.25\\\"><path d=\\\"M93.103,83.904c0,0,1.708-1.634,3.242,0c1.535,1.634,0.322,2.203-0.223,2.426c-0.544,0.223-2.623,0.446-3.341-0.197 S92.635,84.248,93.103,83.904z\\\"></path><path d=\\\"M89.241,79.622c0,0,3.144-3.021,4.827-0.842c1.683,2.178,1.312,3.021-1.486,3.614c-2.796,0.595-3.861,1.263-5.37,0.595 c-1.511-0.669-2.005-2.13,0.495-2.724C89.241,79.622,89.241,79.622,89.241,79.622z\\\"></path><path d=\\\"M83.598,73.087c0.074-0.123,2.772-2.054,4.802-1.782c2.03,0.272,3.045,1.46,3.688,2.476s0.247,2.476-1.708,3.095 c-1.955,0.618-4.184,1.633-5.272,2.376c-1.089,0.742-2.302,0.989-3.317,0.42c-1.014-0.569-3.144-0.668-3.837-2.426 c-0.692-1.757,1.238-1.731,1.882-2.128S83.598,73.087,83.598,73.087z\\\"></path><path d=\\\"M74.191,66.429c0,0,4.554-3.218,7.476-3.664c2.921-0.445,4.652,0.99,5.891,2.625c1.237,1.633,2.438,4.059-1.603,5 c-4.041,0.94-5.328,2.029-6.17,2.524c-0.841,0.494-3.861,2.178-5.841,2.079c-1.98-0.099-4.803-1.089-5.842-1.881 c-1.04-0.792-2.872-1.733,0-3.268c2.871-1.535,4.059-2.277,4.059-2.277L74.191,66.429z\\\"></path><path d=\\\"M68.828,53.541c0,0,5.742-3.497,8.978-3.564c3.234-0.066,3.894,0.396,4.884,2.508c0.99,2.114,2.399,4.555,2.399,4.555 s0.636,2.708-2.796,3.631c-3.431,0.925-8.05,3.563-10.164,4.488c-2.113,0.925-6.206,4.818-11.024,4.753 c-4.817-0.065-8.978-1.518-10.297-3.894c-1.32-2.377,0.726-3.895,2.574-3.961c1.849-0.067,7.591-3.696,8.977-4.29 C63.746,57.173,68.828,53.541,68.828,53.541z\\\"></path><path d=\\\"M51.203,40.271l8.581-3.563c0,0,6.206-1.979,8.714-1.451c2.508,0.527,5.741,2.376,6.864,3.96s2.398,6.006,2.288,7.063 s-5.918,3.17-8.162,4.226c-2.245,1.056-13.004,6.007-14.588,7.128c-1.584,1.122-10.033,3.299-12.739,3.036 c-2.707-0.263-9.308-2.772-10.628-4.555s-3.367-3.763-0.99-4.95c2.376-1.188,6.138-2.573,8.118-3.828 C40.643,46.082,51.203,40.271,51.203,40.271z\\\"></path><path d=\\\"M28.894,11.229c0,0,14.158-0.198,16.535,0c2.376,0.198,13.367,0.495,16.139,2.277s5.941,5.644,7.128,8.614 c1.188,2.97,2.675,7.525,0,8.713c-2.673,1.188-14.06,5.743-17.425,7.624c-3.367,1.881-16.734,6.832-18.714,7.822 c-1.98,0.99-10.396,5.897-14.654,3.691c-4.258-2.205-7.525-11.91-7.921-14.384c0,0-2.475-5.743-2.673-15.644 c0,0-0.297-2.674-1.881-6.832c-1.584-4.159-3.07-6.436-3.07-6.436S0.675,0.833,4.041,2.516c3.366,1.683,2.818,2.161,6.237,3.564 c3.862,1.584,10,3.367,10.595,3.564C21.467,9.843,28.894,11.229,28.894,11.229z\\\"></path></svg>\"},\"$:/plugins/linonetwo/zx-script/zx-script-output.js\":{\"title\":\"$:/plugins/linonetwo/zx-script/zx-script-output.js\",\"text\":\"(function () {\\r\\n  const Widget = require('$:/core/modules/widgets/widget.js').widget;\\r\\n\\r\\n  class ZXOutputWidget extends Widget {\\r\\n    /**\\r\\n     * Lifecycle method: call this.initialise and super\\r\\n     */\\r\\n    constructor(parseTreeNode, options) {\\r\\n      super(parseTreeNode, options);\\r\\n      this.initialise(parseTreeNode, options);\\r\\n    }\\r\\n\\r\\n    get stateTiddlerTitle() {\\r\\n      const title = this.getAttribute('title', 'aaa.mjs');\\r\\n      const stateTiddlerTitle = `$:/state/linonetwo/zx-script/output/${title}`;\\r\\n      return stateTiddlerTitle;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Lifecycle method: Render this widget into the DOM\\r\\n     */\\r\\n    render(parent, nextSibling) {\\r\\n      this.parentDomNode = parent;\\r\\n      this.computeAttributes();\\r\\n\\r\\n      const outputElement = this.document.createElement('article');\\r\\n      outputElement.innerHTML = ($tw.wiki.getTiddlerText(this.stateTiddlerTitle) ?? '')\\r\\n        .split('\\\\n')\\r\\n        .map((line) => `<div>${line}</div>`)\\r\\n        .join('');\\r\\n      parent.insertBefore(outputElement, nextSibling);\\r\\n      this.domNodes.push(outputElement);\\r\\n    }\\r\\n\\r\\n    refresh(changedTiddlers) {\\r\\n      if (this.stateTiddlerTitle in changedTiddlers && changedTiddlers[this.stateTiddlerTitle]?.modified) {\\r\\n        this.refreshSelf();\\r\\n        return true;\\r\\n      }\\r\\n      return false;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  exports['zx-script-output'] = ZXOutputWidget;\\r\\n})();\\r\\n\",\"type\":\"application/javascript\",\"module-type\":\"widget\"}}}"}