{"title":"$:/plugins/linonetwo/preview-glass","description":"Glassify Modification to the tobibeer/preview plugin, add inverse links, and make it auto-close","author":"LinOnetwo","version":"0.5.7","core-version":">=5.1.22","list":"readme config motivation","source":"https://github.com/tobibeer/tw5-preview","documentation":"https://tobibeer.github.io/tw5-preview","plugin-type":"plugin","dependents":"$:/plugins/tobibeer/appear $:/plugins/ooktech/dynamic-tables $:/plugins/linonetwo/inverse-link-and-folder","plugin-priority":"1","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/linonetwo/preview-glass/config\":{\"title\":\"$:/plugins/linonetwo/preview-glass/config\",\"text\":\"\\\\define default()\\r\\n<dt>$(defaults)$$(option)$</dt>\\r\\n<dd>\\r\\n//{{$:/plugins/linonetwo/preview-glass/lingo/$(option)$}}<$list\\r\\nfilter=\\\"[[$(option)$]prefix[template]]\\\">\\r\\n{{$(defaults)$$(option)$}}</$list>://<br>\\r\\n<$edit-text tag=input tiddler=\\\"$(defaults)$$(option)$\\\"/>\\r\\n</dd>\\r\\n\\\\end\\n\\n<dl class=\\\"preview-defaults\\\">\\r\\n<$vars defaults=\\\"$:/plugins/linonetwo/preview-glass/defaults/\\\">\\r\\n<$list filter=\\\"[all[tiddlers+shadows]removeprefix<defaults>sort[title]]\\\" variable=\\\"option\\\">\\r\\n<<default>>\\r\\n</$list>\\r\\n</$vars>\\r\\n</dl>\\r\\n<style>.preview-defaults input {width:90%;}</style>\\r\\n\"},\"$:/plugins/linonetwo/preview-glass/lingo/keys\":{\"title\":\"$:/plugins/linonetwo/preview-glass/lingo/keys\",\"text\":\"modifier keys to trigger popup directly on-hover (ctrl, alt+shift, meta, etc...)\"},\"$:/plugins/linonetwo/preview-glass/defaults/keys\":{\"title\":\"$:/plugins/linonetwo/preview-glass/defaults/keys\",\"text\":\"CTRL\"},\"$:/plugins/linonetwo/preview-glass/lingo/delay\":{\"title\":\"$:/plugins/linonetwo/preview-glass/lingo/delay\",\"text\":\"delay popup for this many milliseconds\"},\"$:/plugins/linonetwo/preview-glass/defaults/delay\":{\"title\":\"$:/plugins/linonetwo/preview-glass/defaults/delay\",\"text\":\"150\"},\"$:/plugins/linonetwo/preview-glass/lingo/class\":{\"title\":\"$:/plugins/linonetwo/preview-glass/lingo/class\",\"text\":\"css classes applied to the popup\"},\"$:/plugins/linonetwo/preview-glass/defaults/class\":{\"title\":\"$:/plugins/linonetwo/preview-glass/defaults/class\",\"text\":\"hover-popup-preview-container\"},\"$:/plugins/linonetwo/preview-glass/lingo/not\":{\"title\":\"$:/plugins/linonetwo/preview-glass/lingo/not\",\"text\":\"no preview for links inside elements with these classes\"},\"$:/plugins/linonetwo/preview-glass/defaults/not\":{\"title\":\"$:/plugins/linonetwo/preview-glass/defaults/not\",\"text\":\"tc-drop-down tc-search-drop-down tc-sidebar-scrollable tc-topbar tc-tiddler-title\"},\"$:/plugins/linonetwo/preview-glass/lingo/exclude\":{\"title\":\"$:/plugins/linonetwo/preview-glass/lingo/exclude\",\"text\":\"no preview for links to tiddlers matching this filter\"},\"$:/plugins/linonetwo/preview-glass/defaults/exclude\":{\"title\":\"$:/plugins/linonetwo/preview-glass/defaults/exclude\",\"text\":\"[is[system]] [all[shadows]] [!has[text]]\"},\"$:/plugins/linonetwo/preview-glass/lingo/template\":{\"title\":\"$:/plugins/linonetwo/preview-glass/lingo/template\",\"text\":\"the preview template\"},\"$:/plugins/linonetwo/preview-glass/defaults/template\":{\"title\":\"$:/plugins/linonetwo/preview-glass/defaults/template\",\"text\":\"$:/plugins/linonetwo/preview-glass/template\"},\"$:/plugins/linonetwo/preview-glass/lingo/open\":{\"title\":\"$:/plugins/linonetwo/preview-glass/lingo/open\",\"text\":\"view at ''<<WIKI>>''\"},\"$:/plugins/linonetwo/preview-glass/keyboard.js\":{\"title\":\"$:/plugins/linonetwo/preview-glass/keyboard.js\",\"text\":\"/*\\\\\\r\\ntitle: $:/plugins/tobibeer/preview/keyboard.js\\r\\ntype: application/javascript\\r\\nmodule-type: utils\\r\\nFixes $:/core/modules/utils/dom/keyboard.js by providing an alternative.\\r\\nDo not use as an API, let's fix the core.\\r\\n@preserve\\r\\n\\\\*/\\r\\n(function(){\\r\\n\\r\\n  /*jslint node: true, browser: true */\\r\\n  /*global $tw: false */\\r\\n  \\\"use strict\\\";\\r\\n  \\r\\n  var namedKeys = {\\r\\n    \\\"BACKSPACE\\\": 8,\\r\\n    \\\"TAB\\\": 9,\\r\\n    \\\"ENTER\\\": 13,\\r\\n    \\\"ESCAPE\\\": 27,\\r\\n    \\\"PAGEUP\\\": 33,\\r\\n    \\\"PAGEDOWN\\\": 34,\\r\\n    \\\"END\\\": 35,\\r\\n    \\\"HOME\\\": 36,\\r\\n    \\\"LEFT\\\":\\t37,\\r\\n    \\\"UP\\\": 38,\\r\\n    \\\"RIGHT\\\": 39,\\r\\n    \\\"DOWN\\\": 40,\\r\\n    \\\"INSERT\\\": 45,\\r\\n    \\\"DELETE\\\": 46\\r\\n  };\\r\\n  \\r\\n  /*\\r\\n  Parses a key descriptor into the structure:\\r\\n  {\\r\\n    keyCode: numeric keycode\\r\\n    shiftKey: boolean\\r\\n    altKey: boolean\\r\\n    ctrlKey: boolean\\r\\n  }\\r\\n  Key descriptors have the following format:\\r\\n    ctrl+enter\\r\\n    ctrl+shift+alt+A\\r\\n  */\\r\\n  exports.parseKeyDescriptorTB = function(keyDescriptor) {\\r\\n    var neg,s,t,\\r\\n      components = keyDescriptor.toUpperCase().split(\\\"+\\\"),\\r\\n      info = {\\r\\n        keyCode: null,\\r\\n        shiftKey: false,\\r\\n        altKey: false,\\r\\n        ctrlKey: false\\r\\n      };\\r\\n    for(t=0; t<components.length; t++) {\\r\\n      neg = false;\\r\\n      s = components[t];\\r\\n      // Look for negation\\r\\n      if(s.substr(0,1) === \\\"!\\\") {\\r\\n        neg = true;\\r\\n        s = s.substr(1);\\r\\n      }\\r\\n      // Look for modifier keys\\r\\n      if(s === \\\"CTRL\\\") {\\r\\n        info.ctrlKey = neg ? null : true;\\r\\n      } else if(s === \\\"SHIFT\\\") {\\r\\n        info.shiftKey =  neg ? null : true;\\r\\n      } else if(s === \\\"ALT\\\") {\\r\\n        info.altKey =  neg ? null : true;\\r\\n      } else if(s === \\\"META\\\") {\\r\\n        info.metaKey =  neg ? null : true;\\r\\n      // Replace named keys with their code\\r\\n      } else if(namedKeys[s]) {\\r\\n        info.keyCode = namedKeys[s];\\r\\n      // Normal letter\\r\\n      } else {\\r\\n        info.keyCode = s.charCodeAt(0);\\r\\n      }\\r\\n    }\\r\\n    return info;\\r\\n  };\\r\\n  \\r\\n  exports.checkKeyDescriptorTB = function(event,keyInfo) {\\r\\n    var metaKeyStatus = !!keyInfo.metaKey; // Using a temporary variable to keep JSHint happy\\r\\n    return (keyInfo.keyCode === null || event.keyCode === keyInfo.keyCode) &&\\r\\n      (keyInfo.shiftKey === null ? !event.shiftKey : event.shiftKey === keyInfo.shiftKey) &&\\r\\n      (keyInfo.altKey === null ? !event.altKey : event.altKey === keyInfo.altKey) &&\\r\\n      (keyInfo.ctrlKey === null ? !event.ctrlKey : event.ctrlKey === keyInfo.ctrlKey) &&\\r\\n      (keyInfo.metaKey === null ? !event.metaKey : event.metaKey === metaKeyStatus);\\r\\n  };\\r\\n  \\r\\n  })();\",\"type\":\"application/javascript\",\"module-type\":\"utils\",\"Fixes $\":\"/core/modules/utils/dom/keyboard.js by providing an alternative.\"},\"$:/plugins/linonetwo/preview-glass/link.js\":{\"title\":\"$:/plugins/linonetwo/preview-glass/link.js\",\"text\":\"/*\\\\\\r\\ntitle: $:/plugins/linonetwo/preview-glass/link.js\\r\\ntype: application/javascript\\r\\nmodule-type: startup\\r\\nEnhances the link widget for on-hover previews\\r\\n\\r\\nModified by LinOnetwo\\r\\n\\r\\n@preserve\\r\\n\\\\*/\\r\\n/*jslint node: true, browser: true */\\r\\n/*global $tw: false */\\r\\n\\r\\n(function () {\\r\\n  var // Global flag to stop mouseover madness\\r\\n    block,\\r\\n    // Get core link widget\\r\\n    CoreLink = require('$:/core/modules/widgets/link.js').link,\\r\\n    // Store ref to render() and handleClickEvent()\\r\\n    renderCore = CoreLink.prototype.render,\\r\\n    clickCore = CoreLink.prototype.handleClickEvent;\\r\\n\\r\\n  // Hijack core link widget render()\\r\\n  CoreLink.prototype.render = function () {\\r\\n    // Run core handler\\r\\n    renderCore.apply(this, arguments);\\r\\n    var self = this,\\r\\n      wiki = this.wiki,\\r\\n      // The link node\\r\\n      el = this.domNodes[0],\\r\\n      // Target tiddler\\r\\n      to = wiki.getTiddler(self.to),\\r\\n      // Shortcut to defaults namespace\\r\\n      defaults = '$:/plugins/linonetwo/preview-glass/defaults/',\\r\\n      // Shortcut to preview namespace\\r\\n      preview = '$:/temp/tobibeer/preview-',\\r\\n      // Modifier keys to quick-show the popup w/o delay\\r\\n      keys = $tw.utils.parseKeyDescriptorTB(wiki.getTextReference(defaults + 'keys', '').toUpperCase()),\\r\\n      // Delay for popup rendering\\r\\n      delay = wiki.getTextReference(defaults + 'delay').toUpperCase(),\\r\\n      //Check if popup already open\\r\\n      getInfo = function (el) {\\r\\n        // Get current popup level\\r\\n        var info = $tw.popup.popupInfo(el),\\r\\n          // Get current popup level\\r\\n          level = info.popupLevel;\\r\\n        return wiki.getTextReference(preview + level) && wiki.getTextReference(preview + level + '-tiddler') === self.to\\r\\n          ? null\\r\\n          : info;\\r\\n      },\\r\\n      // Displays the preview popup\\r\\n      showPopup = function () {\\r\\n        var level,\\r\\n          // Get info (only if not open yet)\\r\\n          info = getInfo(el);\\r\\n        // Not open yet and not yet blocking mouseover madness?\\r\\n        if (info) {\\r\\n          // Get current popup level\\r\\n          level = info.popupLevel;\\r\\n          // Stop waiting for other popups to pop up\\r\\n          clearTimeout(self.previewTimeout);\\r\\n          // Quite all of outer level\\r\\n          $tw.popup.cancel(level);\\r\\n          // Level up\\r\\n          level++;\\r\\n          // Store reference to tiddler to be previewed for level\\r\\n          wiki.setText(preview + level + '-tiddler', 'text', null, self.to);\\r\\n          // Store the popup details if not already there\\r\\n          if ($tw.popup.findPopup(preview + level) === -1) {\\r\\n            // Show popup with timeout, to get past nextTick\\r\\n            setTimeout(function () {\\r\\n              // Core popup triggering\\r\\n              $tw.popup.triggerPopup({\\r\\n                // For this tiddler\\r\\n                domNode: el,\\r\\n                // The state for this level\\r\\n                title: preview + level,\\r\\n                wiki: wiki,\\r\\n              });\\r\\n              block = 0;\\r\\n            }, 50);\\r\\n          }\\r\\n        }\\r\\n      },\\r\\n      // A helper to determine whether or not to actually show the popup\\r\\n      show = function () {\\r\\n        var ex,\\r\\n          exclude,\\r\\n          // By default, show\\r\\n          doShow = 1,\\r\\n          // The css classes in which not to display previews for links\\r\\n          not = wiki.getTextReference(defaults + 'not', '');\\r\\n        // Got any?\\r\\n        if (not) {\\r\\n          // Split classes and loop\\r\\n          $tw.utils.each(not.split(' '), function (n) {\\r\\n            // This node\\r\\n            var node = el;\\r\\n            // Loop so long as parent-nodes and still displaying\\r\\n            while (node && doShow) {\\r\\n              // Node has exclude-class?\\r\\n              if ($tw.utils.hasClass(node, n)) {\\r\\n                // Ok, so we're not showing\\r\\n                doShow = 0;\\r\\n                // Stop iterating\\r\\n                return false;\\r\\n              }\\r\\n              // Next partent\\r\\n              node = node.parentNode;\\r\\n            }\\r\\n          });\\r\\n        }\\r\\n        // Not aborted yet?\\r\\n        if (doShow) {\\r\\n          // get exclude filter\\r\\n          exclude = wiki.getTextReference(defaults + 'exclude', '');\\r\\n          // Fetch excluded titles\\r\\n          ex = exclude ? wiki.filterTiddlers(exclude) : [];\\r\\n          // Title in excludes?\\r\\n          if (ex.indexOf(self.to) >= 0) {\\r\\n            // Then don't display\\r\\n            doShow = 0;\\r\\n          }\\r\\n        }\\r\\n        // Return what we got\\r\\n        return doShow;\\r\\n      };\\r\\n    // Turn delay to integer\\r\\n    delay = delay !== undefined ? parseInt(delay) : null;\\r\\n    // Not a number?\\r\\n    if (delay !== null && isNaN(delay)) {\\r\\n      // No delay\\r\\n      delay = 0;\\r\\n    }\\r\\n    // Target tiddler exists?\\r\\n    if (to) {\\r\\n      // Add handle class\\r\\n      $tw.utils.addClass(el, 'tc-popup-handle');\\r\\n      // Add absolute positioning class\\r\\n      $tw.utils.addClass(el, 'tc-popup-absolute');\\r\\n      // Loop new event handlers\\r\\n      ['mouseover', 'mouseout'].forEach(function (e) {\\r\\n        // Create event listener\\r\\n        el.addEventListener(e, function (event) {\\r\\n          // Ref to event\\r\\n          var ev = event || window.event;\\r\\n          // On mouseover\\r\\n          if (e === 'mouseover') {\\r\\n            // Actually showing anything?\\r\\n            if (show()) {\\r\\n              // No keycode?\\r\\n              if (!ev.keyCode) {\\r\\n                // Set to 0, for whatever reason the core expects one\\r\\n                ev.keyCode = 0;\\r\\n              }\\r\\n              // Modifier keys say we show directly?\\r\\n              if ($tw.utils.checkKeyDescriptorTB(ev, keys)) {\\r\\n                // Not yet blocking mousover madness?\\r\\n                if (!block) {\\r\\n                  // Block further firing of mouseover events\\r\\n                  block = 1;\\r\\n                  // Then show\\r\\n                  showPopup();\\r\\n                }\\r\\n                // Modifiers don't match but we got a delay?\\r\\n              } else if (delay !== null) {\\r\\n                // No more blocking of mouseover events\\r\\n                block = 0;\\r\\n                // Set timeout and wait to show popup\\r\\n                self.previewTimeout = setTimeout(showPopup, delay);\\r\\n              }\\r\\n            }\\r\\n            // Mouseout\\r\\n          } else {\\r\\n            // No more blocking of mouseover events\\r\\n            block = 0;\\r\\n            // No more waiting for the popup\\r\\n            clearTimeout(self.previewTimeout);\\r\\n            // close popup\\r\\n\\t\\t\\t\\t\\t\\t // if next object to move mouse to is not a popup\\r\\n            if(!event.relatedTarget || !event.relatedTarget.classList.contains('tc-preview-tiddler')) {\\r\\n              // then close popup\\r\\n            \\t$tw.popup.cancel(Math.max(0, getInfo(el).popupLevel));\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n          }\\r\\n        });\\r\\n      });\\r\\n    }\\r\\n  };\\r\\n\\r\\n  // Hijack click handler\\r\\n  CoreLink.prototype.handleClickEvent = function () {\\r\\n    // Run core handler\\r\\n    clickCore.apply(this, arguments);\\r\\n    // Abort popup delay timeout\\r\\n    clearTimeout(this.previewTimeout);\\r\\n    // Close popups\\r\\n    $tw.popup.cancel(Math.max(0, $tw.popup.popupInfo(this.domNodes[0]).popupLevel));\\r\\n  };\\r\\n})();\",\"type\":\"application/javascript\",\"module-type\":\"startup\",\"created\":\"20200530032342272\",\"modified\":\"20200530033801090\"},\"$:/plugins/linonetwo/preview-glass/motivation\":{\"title\":\"$:/plugins/linonetwo/preview-glass/motivation\",\"created\":\"20200413015135813\",\"modified\":\"20200530032358118\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"[[Preview|http://tobibeer.github.io/tw5-plugins/#preview]] 鼠标悬浮链接查看预览，只展示内部链接，因为外部链接可能也是个 TiddlyWiki 而非常硕大。\\n\\n我在展示时使用了自己的模板，不展示具体内容，只展示 tag 和相关笔记，不然内容实在是太多了。真要看具体内容直接点击链接看不就好了。\\n\\n[[我还修改了原版的 JS|https://github.com/tobibeer/tw5-preview/issues/1]] ，从而让预览窗口在鼠标移开链接后就自动关闭，以免影响操作。\\n\\n```js\\r\\n            // Mouseout\\r\\n          } else {\\r\\n            // No more blocking of mouseover events\\r\\n            block = 0;\\r\\n            // No more waiting for the popup\\r\\n\\t\\t\\t\\t\\t\\tconst popupID = Math.max(0, getInfo(el).popupLevel);\\r\\n            clearTimeout(self.previewTimeout);\\r\\n            // close popup\\r\\n            $tw.popup.cancel(popupID);\\r\\n          }\\r\\n```\\r\\n\"},\"$:/plugins/linonetwo/preview-glass/popups\":{\"title\":\"$:/plugins/linonetwo/preview-glass/popups\",\"tags\":\"$:/tags/PageTemplate\",\"text\":\"\\\\define state(num)\\r\\n$:/temp/tobibeer/preview-$num$\\r\\n\\\\end\\n\\n\\\\define classes(num)\\r\\ntc-popup appear appear-block appear-reveal tc-preview-tiddler tc-preview-tiddler-$num$ $(default-classes)$\\r\\n\\\\end\\n\\n\\\\define level(num)\\r\\n<$reveal tag=\\\"div\\\" type=\\\"popup\\\" state=<<state $num$>> class=<<classes $num$>>>\\r\\n<$tiddler tiddler={{$:/temp/tobibeer/preview-$num$-tiddler}}>\\r\\n<$transclude tiddler={{$:/plugins/linonetwo/preview-glass/defaults/template}} mode=\\\"block\\\"/>\\r\\n</$tiddler>\\r\\n</$reveal>\\r\\n\\\\end\\n\\n<$vars default-classes={{$:/plugins/linonetwo/preview-glass/defaults/class}}>\\r\\n<$list filter=\\\"1 2 3 4 5 6 7 8 9\\\">\\r\\n<$macrocall $name=\\\"level\\\" num={{!!title}}/>\\r\\n</$list>\\r\\n</$vars>\\r\\n\"},\"$:/plugins/linonetwo/preview-glass/preview-template.css\":{\"title\":\"$:/plugins/linonetwo/preview-glass/preview-template.css\",\"text\":\".hover-popup-preview-container {\\r\\n\\tbackdrop-filter: blur(10px);\\r\\n\\tbackground: rgba(255, 255, 255, 0.3) !important;\\r\\n\\ttransform: translateY(0px);\\r\\n}\\r\\n\\r\\n/**\\r\\n  Try added a triangle to it, but it seems work not so good with the backdrop-filter glass effect\\r\\n*/\\r\\n\\r\\n/**\\r\\n.hover-popup-preview-container::before {\\r\\n\\tcontent: \\\"\\\";\\r\\n\\twidth: 0px;\\r\\n\\theight: 0px;\\r\\n\\tposition: absolute;\\r\\n\\tborder-left: 10px solid transparent;\\r\\n\\tborder-right: 10px solid transparent;\\r\\n\\tborder-top: 10px solid transparent;\\r\\n\\tborder-bottom: 10px solid rgba(255, 255, 255, 0.5);\\r\\n\\tright: 95%;\\r\\n\\ttop: -20.5px;\\r\\n}\\r\\n*/\",\"created\":\"20200415090452849\",\"modified\":\"20200530033507747\",\"tags\":\"$:/tags/Stylesheet\",\"type\":\"text/css\"},\"$:/plugins/linonetwo/preview-glass/readme\":{\"title\":\"$:/plugins/linonetwo/preview-glass/readme\",\"created\":\"20200414135748497\",\"modified\":\"20200602062349232\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"!! About\\n\\nModification to the [[tobibeer/preview plugin|https://tobibeer.github.io/tw5-plugins/#preview]], make it auto close if mouse move out of the link (as discussed in the [[issue#1|https://github.com/tobibeer/tw5-preview/issues/1]]), and add custom style, make it like a glass.\\n\\n!! Prerequisit\\n\\nThis plugin has three dependencies:\\n\\n# [[tobibeer/appear|http://tobibeer.github.io/tw5-plugins/#appear]] to make popup work\\r\\n# [[$:/plugins/ooktech/dynamic-tables]] to make fields table in the popup template\\r\\n# [[$:/plugins/linonetwo/inverse-link-and-folder]] to make bi-directional links in the popup template\\n\\n!! This Plugin is a Forked version\\n\\nOriginal source is located in [[https://github.com/tobibeer/tw5-preview]], which has version 0.5.6 at several years ago, so maybe this plugin can be 0.5.7?\\n\\nSee [[document of tobibeer/preview|https://tobibeer.github.io/tw5-plugins/#preview]] to get more usage and explaination.\\n\\nThis plugin provides some new template, which depends on some other plugin to work, see plugin.info for detail.\\n\\n- [[$:/plugins/linonetwo/preview-glass/preview-template.css]] new styles\\r\\n- [[$:/plugins/linonetwo/preview-glass/template]] new template\\n\\nAnd some overrides:\\n\\n- [[$:/plugins/tobibeer/preview/link.js]] is override by this plugin, by providing a new js with same title\\r\\n- [[$:/plugins/tobibeer/preview/defaults/not]] set some link to not have pop up.\\r\\n- [[$:/plugins/tobibeer/preview/defaults/class]] and [[$:/plugins/tobibeer/preview/defaults/template]] override the template and style settings\\r\\n- [[$:/plugins/tobibeer/preview/defaults/delay]] change the popup delay\\r\\n\"},\"$:/plugins/linonetwo/preview-glass/template\":{\"title\":\"$:/plugins/linonetwo/preview-glass/template\",\"created\":\"20200413014112868\",\"modified\":\"20200415101145651\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"{{||$:/plugins/linonetwo/inverse-link-and-folder/infobar}}\\n\\n<<ColumnTable \\\"[<currentTiddler>]\\\" \\\"modified created\\\">>\"}}}"}