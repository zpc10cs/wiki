{"name":"Relink Titles","title":"$:/plugins/flibbles/relink-titles","description":"Renames tiddlers with titles derived from Relinked tiddler","author":"Flibbles","version":"2.0.0","core-version":">=5.1.22","parent-plugin":"$:/plugins/flibbles/relink","source":"https://github.com/flibbles/tw5-relink","demo":"http://flibbles.github.io/tw5-relink/","list":"readme configuration","dependents":"","plugin-type":"plugin","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/flibbles/relink-titles/configuration\":{\"title\":\"$:/plugins/flibbles/relink-titles/configuration\",\"caption\":\"{{$:/plugins/flibbles/relink-titles/language/Caption}}\",\"tags\":\"$:/tags/flibbles/relink/Configuration\",\"text\":\"\\\\define lingo-base() $:/plugins/flibbles/relink-titles/language/\\r\\n\\\\define prefix() $:/config/flibbles/relink-titles/relink/\\n\\n<<lingo Help>>\\n\\n<table>\\r\\n<tbody>\\r\\n<$list filter=\\\"[[relinktitlesrule]modules[]]\\\">\\r\\n<tr>\\r\\n<td>\\r\\n<$checkbox\\r\\n\\ttiddler={{{ [all[current]addprefix<prefix>] }}}\\r\\n\\tfield=\\\"text\\\"\\r\\n\\tchecked=\\\"enabled\\\"\\r\\n\\tunchecked=\\\"disabled\\\"\\r\\n\\tdefault=\\\"enabled\\\"\\r\\n> ''{{!!caption}}''</$checkbox></td><td>\\n\\n<$transclude field='description' />\\n\\n</td></tr></$list>\\r\\n</tbody></table>\\r\\n\"},\"$:/plugins/flibbles/relink-titles/language/Caption\":{\"title\":\"$:/plugins/flibbles/relink-titles/language/Caption\",\"text\":\"Titles\"},\"$:/plugins/flibbles/relink-titles/language/Directory/Caption\":{\"title\":\"$:/plugins/flibbles/relink-titles/language/Directory/Caption\",\"text\":\"Rename subdirectories\"},\"$:/plugins/flibbles/relink-titles/language/Directory/Description\":{\"title\":\"$:/plugins/flibbles/relink-titles/language/Directory/Description\",\"text\":\"For wikis set up hierarchically using `/`, like a filesystem. This option will update all tiddlers nested inside the target tiddler. i.e. `fromTiddler/path/file` becomes `toTiddler/path/file`.\"},\"$:/plugins/flibbles/relink-titles/language/Help\":{\"title\":\"$:/plugins/flibbles/relink-titles/language/Help\",\"text\":\"See the <a href={{{ [{$:/plugins/flibbles/relink-titles!!demo}addsuffix[#Plugins/Titles]] }}}>//Relink-titles// documentation page</a> for details.\"},\"$:/plugins/flibbles/relink-titles/readme\":{\"title\":\"$:/plugins/flibbles/relink-titles/readme\",\"text\":\"Highly customizable relinking of tiddler titles //related// to the renamed tiddler.\\n\\n* Rename a hierarchy of subtiddlers when renaming a root tiddler.\\r\\n* Make custom filter rules to rename other tiddlers the way you want when Relinking.\\r\\n* Integrates with other plugins for plugin-specific rules.\\n\\nSee <a href={{$:/plugins/flibbles/relink-titles!!source}}>the tw5-relink website</a> for more details and examples.\\n\\n{{$:/core/images/warning}} ''Warning:'' You must use //Relink// v1.10.2 or greater with this, or this plugin may delete some tiddler bodies while trying to relink titles.\\r\\n\"},\"$:/plugins/flibbles/relink-titles/relinkoperations/title.js\":{\"title\":\"$:/plugins/flibbles/relink-titles/relinkoperations/title.js\",\"text\":\"/*\\\\\\r\\nmodule-type: relinkoperator\\r\\ntitle: $:/plugins/flibbles/relink-titles/relinkoperations/title.js\\r\\ntype: application/javascript\\r\\n\\r\\nRenames tiddlers which have titles derived from fromTitle. Then it makes\\r\\nsure that those tiddlers are properly relinked too.\\r\\n\\r\\n\\\\*/\\r\\n\\r\\n/*jslint node: false, browser: true */\\r\\n/*global $tw: false */\\r\\n\\\"use strict\\\";\\r\\n\\r\\nvar configPrefix = \\\"$:/config/flibbles/relink-titles/relink/\\\";\\r\\nvar utils = require('$:/plugins/flibbles/relink/js/utils.js');\\r\\nutils.getContext('whitelist').hotDirectories.push(configPrefix);\\r\\n\\r\\nvar titleRules = Object.create(null);\\r\\n$tw.modules.forEachModuleOfType('relinktitlesrule', function(title, module) {\\r\\n\\ttitleRules[title] = module;\\r\\n});\\r\\n\\r\\nexports.name = 'title';\\r\\n\\r\\nexports.report = function(tiddler, callback, options) {\\r\\n\\tvar cache = getCache(options),\\r\\n\\t\\trules = cache.rules;\\r\\n\\tfor (var i = 0; i < rules.length; i++) {\\r\\n\\t\\trules[i].report(tiddler.fields.title, function(title, blurb) {\\r\\n\\t\\t\\tcallback(title, blurb ? ('title: ' + blurb) : 'title');\\r\\n\\t\\t}, options);\\r\\n\\t}\\r\\n};\\r\\n\\r\\nexports.relink = function(tiddler, fromTitle, toTitle, changes, options) {\\r\\n\\tvar cache = getCache(options),\\r\\n\\t\\ttitle = tiddler.fields.title;\\r\\n\\tif (!cache.touched[title]) {\\r\\n\\t\\tvar rules = cache.rules;\\r\\n\\t\\tfor (var i = 0; i < rules.length; i++) {\\r\\n\\t\\t\\tvar rule = rules[i];\\r\\n\\t\\t\\tvar entry = rule.relink(title, fromTitle, toTitle, options);\\r\\n\\t\\t\\tif (entry) {\\r\\n\\t\\t\\t\\tvar result = entry.output;\\r\\n\\t\\t\\t\\tif (result && (result !== title)) {\\r\\n\\t\\t\\t\\t\\tif (options.wiki.getTiddler(result) || cache.touched[result]) {\\r\\n\\t\\t\\t\\t\\t\\t// There's already a tiddler there. We won't clobber it.\\r\\n\\t\\t\\t\\t\\t\\tentry.impossible = true;\\r\\n\\t\\t\\t\\t\\t\\tentry.output = undefined;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tcache.touched[result] = true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t// Record that we've touched this one, so we only touch it once.\\r\\n\\t\\t\\t\\t// Both its prior and latter. Neither should be touched again.\\r\\n\\t\\t\\t\\tcache.touched[title] = true;\\r\\n\\t\\t\\t\\tchanges.title = entry;\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n};\\r\\n\\r\\nfunction getCache(options) {\\r\\n\\treturn utils.getCacheForRun(options, 'titles', function() {\\r\\n\\t\\treturn {\\r\\n\\t\\t\\trules: getRules(options.wiki),\\r\\n\\t\\t\\ttouched: Object.create(null)\\r\\n\\t\\t};\\r\\n\\t});\\r\\n};\\r\\n\\r\\nfunction getRules(wiki) {\\r\\n\\tvar activeRules = [];\\r\\n\\tfor (var rule in titleRules) {\\r\\n\\t\\tvar configTiddler = wiki.getTiddler(configPrefix + rule);\\r\\n\\t\\tif (!configTiddler || configTiddler.fields.text !== \\\"disabled\\\") {\\r\\n\\t\\t\\tactiveRules.push(titleRules[rule]);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn activeRules;\\r\\n};\\r\\n\",\"module-type\":\"relinkoperator\",\"type\":\"application/javascript\"},\"$:/plugins/flibbles/relink-titles/rules/directory\":{\"title\":\"$:/plugins/flibbles/relink-titles/rules/directory\",\"text\":\"/*\\\\\\r\\ncaption: {{$:/plugins/flibbles/relink-titles/language/Directory/Caption}}\\r\\ndescription: {{$:/plugins/flibbles/relink-titles/language/Directory/Description}}\\r\\nmodule-type: relinktitlesrule\\r\\ntitle: $:/plugins/flibbles/relink-titles/rules/directory\\r\\ntype: application/javascript\\r\\n\\r\\nHandles subdirectory renaming.\\r\\n\\r\\n\\\\*/\\r\\n\\r\\n/*jslint node: false, browser: true */\\r\\n/*global $tw: false */\\r\\n\\\"use strict\\\";\\r\\n\\r\\nexports.name = 'directory';\\r\\n\\r\\n/**The report returns all parent directories of a given title which exist.\\r\\n */\\r\\nexports.report = function(title, callback, options) {\\r\\n\\tvar index = -1;\\r\\n\\twhile ((index = title.indexOf('/', index+1)) >= 0) {\\r\\n\\t\\tvar dir = title.substr(0, index);\\r\\n\\t\\tcallback(dir, '.' + title.substr(index));\\r\\n\\t}\\r\\n};\\r\\n\\r\\n/**The relink returns the new title (if any) derived from title for a given\\r\\n * rename of fromTitle to toTitle.\\r\\n */\\r\\nexports.relink = function(title, fromTitle, toTitle, options) {\\r\\n\\tvar length = fromTitle.length;\\r\\n\\tif (title.charAt(length) === '/' && title.substr(0, length) === fromTitle) {\\r\\n\\t\\treturn {output: toTitle + title.substr(length)};\\r\\n\\t}\\r\\n\\treturn undefined;\\r\\n};\\r\\n\",\"caption\":\"{{$:/plugins/flibbles/relink-titles/language/Directory/Caption}}\",\"description\":\"{{$:/plugins/flibbles/relink-titles/language/Directory/Description}}\",\"module-type\":\"relinktitlesrule\",\"type\":\"application/javascript\"}}}"}